@{
    ViewBag.Title = "RegistroSocialEdit";
    var usuarioAutenticado = Context.Session.GetString("UsuarioAutenticado");
    var nombreUsuario = Context.Session.GetString("NombreUsuario");
}

@if (usuarioAutenticado == null || nombreUsuario == null)
{

    <script>window.location.href = `/Usuario`;</script>
}

<div class="container">
    <!-- Título -->
    <div class="row">
        <div class="col text-center">
            <h3>FICHA DE ENTREVISTA SOCIAL</h3>
        </div>
    </div>
    <div class="row container">
        <div class="col-md-3">
            <label>ESTADO:</label>
            <select type="text" id="estado" name="estado" class="form-control">
                <option value="">Seleccione un estado</option>
            </select>
        </div>
    </div>
    <form class="mt-3 " style="width:100%; box-sizing:content-box " method="post">
        <!-- Datos Generales -->
        <h5 class="mt-4">Datos Generales</h5>
        <div class="row">
            <div class="col-md-3">
                <label>Fecha de Ingreso:</label>
                <input type="date" id="fechaIngreso" class="form-control" />
            </div>
            <div class="col-md-3">
                <label>Fecha de Aplicación:</label>
                <input type="date" id="fechaAplicacion" class="form-control" />
            </div>
            <div class="col-md-3">
                <label>Servicio:</label>
                <select type="text" class="form-control" id="servicio"  name="servicio">
                    <option value="">Seleccione un servicio</option>
                </select>
            </div>
            <div class="col-md-3">
                <label>Cama:</label>
                <input type="text" id="cama" class="form-control" />
            </div>
        </div>

        <!-- Datos del Paciente -->
        <h5 class="mt-4">Datos del Paciente</h5>
        <div class="row">
            <div class="col-md-3">
                <label>Nombre:</label>
                <input type="text" id="nombrePaciente" class="form-control" />
            </div>
            <div class="col-md-3">
                <label>DNI:</label>
                <input type="text" id="dni" class="form-control" />
            </div>
            <div class="col-md-3">
                <label>Edad:</label>
                <input type="number" id="edad" class="form-control" />
            </div>
            <div class="col-md-3">
                <label>Estado Civil:</label>
                <input type="text" id="estadoCivil" class="form-control" />
            </div>
            <div class="col-md-3 mt-2">
                <label>Grado de Instrucción:</label>
                <input type="text" id="gradoInstruccion" class="form-control" />
            </div>
            <div class="col-md-3 mt-2">
                <label>Dirección:</label>
                <input type="text" id="direccion" class="form-control" />
            </div>
            <div class="col-md-3 mt-2">
                <label>Celular:</label>
                <input type="tel" id="celular" class="form-control" />
            </div>
            <div class="col-md-3 mt-2">
                <label>Ocupación:</label>
                <input type="text" id="ocupacion" class="form-control" />
            </div>
            <div class="col-md-4 mt-2">
                <label>Número de Hijos:</label>
                <input type="number" id="numHijos" class="form-control" />
            </div>
            <div class="col-md-4 mt-2">
                <label>Número de Hermanos:</label>
                <input type="number" id="numHermanos" class="form-control" />
            </div>
            <div class="col-md-4 mt-2">
                <label>Seguro:</label>
                <input type="text" id="seguro" class="form-control" />
            </div>
        </div>

        <div class="row">
            <div class="mt-2">
                <label>Dx Médico:</label>
                <textarea class="form-control" rows="2" id="dxMedico"></textarea>
            </div>
        </div>

        <!-- Responsables Section -->
        <div class="container">
            <h5 class="mt-4">Responsables</h5>
            <div id="responsablesContainer">
                <p>No hay responsables registrados.</p>
            </div>
        </div>

        <!-- Datos Adicionales -->
        <div class="row">
            <h5 class="mt-4">Modalidad de ingreso</h5>
            <div class="col-md-6">
                <label>Modalidad de Ingreso:</label>
                <input type="text" id="modalidadIngreso" class="form-control" />
            </div>
        </div>
        <div class="row">
            <h5 class="mt-4">Tipo de familia</h5>
            <div class="col-md-6">
                <label>Tipo de Familia:</label>
                <input type="text" id="tipoFamilia" class="form-control" />
            </div>
            <div class="col-md-6">
                <label>Acciones Realizadas:</label>
                <input type="text" id="accionesRealizadas" class="form-control" />
            </div>
            <div class="">
                <label>Observaciones tipo de familia:</label>
                <textarea class="form-control" rows="2" id="observacionesTipoFamilia"></textarea>
            </div>
        </div>

        <!-- Diagnóstico Social -->
        <h5 class="mt-4 mb-4">Diagnóstico Social</h5>
        <div class="row ">
            <div class="col-md-12">
                <label>Diagnóstico Social:</label>
                <textarea id="diagnosticoSocial" class="form-control" rows="2"></textarea>
            </div>
        </div>

        <!-- Botón Guardar Cambios -->
        <div class="row mb-4 mt-4">
            <button type="button" onclick="guardarCambios()" class="btn btn-danger">GUARDAR CAMBIOS</button>
        </div>
        <div id="errorLog" style="color: red; font-weight: bold; display: none;"></div>
    </form>
</div>

<script>
      function convertirFecha(fechaJson) {
       if (!fechaJson) {
          console.error('Error: fechaJson no es válido', fechaJson);
          return ''; // Retorna una cadena vacía o un valor por defecto
       }
       
       const timestamp = parseInt(fechaJson.replace(/\/Date\((\d+)\)\//, "$1"), 10);
       const date = new Date(timestamp);
       return `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}-${String(date.getDate()).padStart(2, '0')}`;
    }

    function obtenerParametroUrl(nombre) {
        const urlParams = new URLSearchParams(window.location.search);
        return urlParams.get(nombre);
    }

    async function cargarDatos() {
        const id = obtenerParametroUrl('id');
        if (!id) {
            alert('ID no especificado en la URL');
            return;
        }

        try {
            const response = await fetch(`/RegistroSocial/traerRegistroSocial/?id=${id}`);
            const data = await response.json();
            console.log(data)
            document.getElementById('fechaIngreso').value = convertirFecha(data.datos.fechaIngreso);
            document.getElementById('fechaAplicacion').value = convertirFecha(data. datos.fechaAplicacion);
            document.getElementById('servicio').value = data.servicio.iD_servicio;
            document.getElementById('estado').value = data.estado.iD_estado;
            document.getElementById('cama').value = data.datos.cama;
            document.getElementById('accionesRealizadas').value = data.datos.accionesRealizadas;
            document.getElementById('observacionesTipoFamilia').value = data.datos.observacionesFamilia;
            document.getElementById('modalidadIngreso').value = data.datos.modalidadIngreso;
            document.getElementById('tipoFamilia').value = data.datos.tipoFamilia;
            document.getElementById('diagnosticoSocial').value = data.datos.diagnosticoSocial;

            document.getElementById('nombrePaciente').value = data.paciente.nombrePaciente;
            document.getElementById('dni').value = data.paciente.dni;
            document.getElementById('edad').value = data.paciente.edad;
            document.getElementById('estadoCivil').value = data.paciente.estadoCivil;
            document.getElementById('gradoInstruccion').value = data.paciente.gradoInstruccion;
            document.getElementById('direccion').value = data.paciente.direccion;
            document.getElementById('celular').value = data.paciente.celularPaciente;
            document.getElementById('ocupacion').value = data.paciente.ocupacion;
            document.getElementById('numHijos').value = data.paciente.numHijos;
            document.getElementById('numHermanos').value = data.paciente.numHermanos;
            document.getElementById('seguro').value = data.paciente.seguro;
            document.getElementById('dxMedico').value = data.paciente.dxMedico;

            const responsablesContainer = document.getElementById('responsablesContainer');
            responsablesContainer.innerHTML = '';  // Limpiar el contenedor

            if (data.responsables && Array.isArray(data.responsables) && data.responsables.length > 0) {
                data.responsables.forEach((responsable, index) => {
                    const div = document.createElement('div');
                    div.classList.add('row', 'mb-3');
                    div.innerHTML = `
                    <div class="col-md-3">
                        <label>Responsable ${index + 1}:</label>
                        <input type="text" class="form-control" id="nombreResponsable${index}" value="${responsable.nombreResponsable}">
                    </div>
                    <div class="col-md-3">
                        <label>DNI:</label>
                        <input type="text" class="form-control" id="dniResponsable${index}" value="${responsable.dni}">
                    </div>
                    <div class="col-md-3">
                        <label>Edad:</label>
                        <input type="number" class="form-control" id="edadResponsable${index}" value="${responsable.edad}">
                    </div>
                    <div class="col-md-3">
                        <label>Parentesco:</label>
                        <input type="text" class="form-control" id="parentescoResponsable${index}" value="${responsable.parentesco}">
                    </div>
                    <div class="col-md-3 mt-2">
                        <label>Celular:</label>
                        <input type="tel" class="form-control" id="celularResponsable${index}" value="${responsable.celularResponsable}">
                    </div>
                    <div class="col-md-3 mt-2">
                        <label>Ocupación:</label>
                        <input type="text" class="form-control" id="ocupacionResponsable${index}" value="${responsable.ocupacion}">
                    </div>
                    <div class="col-md-3 mt-2">
                        <label>Grado de Instrucción:</label>
                        <input type="text" class="form-control" id="gradoInstruccionResponsable${index}" value="${responsable.gradoInstruccion}">
                    </div>
                    `;
                    responsablesContainer.appendChild(div);
                });
            } else {
                responsablesContainer.innerHTML = '<p>No hay responsables registrados.</p>';
            }

        } catch (error) {
            console.error('Error al cargar los datos:', error);
            alert('Error al cargar los datos. Intente nuevamente.');
        }
    }



    async function guardarCambios(event) {
        // Prevents the default form submission behavior
        
        

        // Reference to error log container
        const errorLog = document.getElementById('errorLog');

        // Clear previous errors
        errorLog.style.display = 'none';
        errorLog.innerText = '';

        // Function to display errors
        function logError(message) {
            errorLog.style.display = 'block';
            errorLog.innerText = message;
            console.error(message);  // Also logs to console
        }

        const id = obtenerParametroUrl('id');
        console.log(id);

        // Collect general data
        const datosGenerales = {
            FechaAplicacion: document.getElementById('fechaAplicacion').value,
            FechaIngreso: document.getElementById('fechaIngreso').value,
            Cama: document.getElementById('cama').value,
            ModalidadIngreso: document.getElementById('modalidadIngreso').value,
            TipoFamilia: document.getElementById('tipoFamilia').value,
            ObservacionesFamilia: document.getElementById('observacionesTipoFamilia').value,
            AccionesRealizadas: document.getElementById('accionesRealizadas').value,
            DiagnosticoSocial: document.getElementById('diagnosticoSocial').value
        };

        // Collect patient data
        const datosPaciente = {
            NombrePaciente: document.getElementById('nombrePaciente').value,
            DNI: document.getElementById('dni').value,
            Edad: document.getElementById('edad').value,
            EstadoCivil: document.getElementById('estadoCivil').value,
            GradoInstruccion: document.getElementById('gradoInstruccion').value,
            Direccion: document.getElementById('direccion').value,
            CelularPaciente: document.getElementById('celular').value,
            Ocupacion: document.getElementById('ocupacion').value,
            NumHijos: document.getElementById('numHijos').value,
            NumHermanos: document.getElementById('numHermanos').value,
            Seguro: document.getElementById('seguro').value,
            DxMedico: document.getElementById('dxMedico').value
        };

        // Collect responsible data
        const responsables = Array.from(document.querySelectorAll('#responsablesContainer .row')).map((row, index) => ({
            NombreResponsable: document.getElementById(`nombreResponsable${index}`).value,
            DNI: document.getElementById(`dniResponsable${index}`).value,
            Edad: document.getElementById(`edadResponsable${index}`).value,
            Ocupacion: document.getElementById(`ocupacionResponsable${index}`).value,
            Parentesco: document.getElementById(`parentescoResponsable${index}`).value,
            CelularResponsable: document.getElementById(`celularResponsable${index}`).value,
            GradoInstruccion: document.getElementById(`gradoInstruccionResponsable${index}`).value
        }));

        // Collect servicio 
        const datoServicio ={
         ID_servicio : document.getElementById('servicio').value
        }
        const datoEstado ={
         ID_estado : document.getElementById('estado').value
        }
        // Create main data object
        const datos = {
            paciente: datosPaciente,
            datos: datosGenerales,
            responsables: responsables,
            servicio: datoServicio ,
            estado: datoEstado
        };

        try {
            // Show authentication modal
            const loginResult = await Swal.fire({
                title: 'Autenticación Requerida',
                html: `
                <div class="login-container">
                    <input type="text" id="usuario" class="swal2-input" placeholder="Usuario">
                    <input type="password" id="password" class="swal2-input" placeholder="Contraseña">
                </div>
                `,
                confirmButtonText: 'Verificar',
                focusConfirm: false,
                preConfirm: () => {
                    const usuario = Swal.getPopup().querySelector('#usuario').value;
                    const password = Swal.getPopup().querySelector('#password').value;

                    if (!usuario || !password) {
                        Swal.showValidationMessage("Por favor, complete todos los campos");
                        return null;
                    }

                    return { usuario, password };
                }
            });

            if (!loginResult.isConfirmed || !loginResult.value) return;

            const { usuario, password } = loginResult.value;

            // Verify credentials with the server
            const authResponse = await fetch('/Usuario/verificarPassword', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ usuario, password })
            });

            if (!authResponse.ok) {
                throw new Error("Error de autenticación");
            }

            const authData = await authResponse.json();

            if (authData !== 1) {
                await Swal.fire("Error", "Usuario o contraseña incorrectos.", "error");
                return;
            }

            // Credentials verified, save the record
            const saveResponse = await fetch(`/RegistroSocial/editarRegistroSocial/${id}`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(datos)
            });

            if (!saveResponse.ok) {
                throw new Error('Error en la respuesta del servidor');
            }

            await Swal.fire("Éxito", "Registro guardado con éxito.", "success");

            // Instead of direct redirect, use a confirmation modal to proceed
            const redirectConfirm = await Swal.fire({
                title: "Registro actualizado",
                text: "¿Desea volver a la página de búsqueda?",
                icon: "success",
                showCancelButton: true,
                confirmButtonText: "Sí",
                cancelButtonText: "No"
            });

            if (redirectConfirm.isConfirmed) {
               window.location.href = window.location.origin + '/DatosGenerales/Busqueda';
            }

        } catch (error) {
            logError("Hubo un error al actualizar el registro. Intente nuevamente.");
            Swal.fire("Error", "Hubo un error al actualizar el registro. Intente nuevamente.", "error");
        }
    }

    window.onload = cargarDatos;

</script>
<script>
    // Usamos Fetch API para obtener los servicios de la API
    fetch('/Servicio/listarServicios')
    .then(response => response.json()) // Convertimos la respuesta a JSON
    .then(data => {

        // Accedemos al select usando el atributo name
        const select = document.getElementsByName('servicio')[0]; // Obtenemos el primer elemento con el name 'servicio'

        // Limpiamos las opciones anteriores (si es necesario)
        select.innerHTML = '';

        // Añadimos la opción por defecto
        const optionDefault = new Option('Seleccione un servicio', '');
        select.appendChild(optionDefault); // Añadimos la opción por defecto

        // Iteramos sobre los servicios obtenidos de la API y añadimos opciones
        data.forEach(servicio => {
            console.log(servicio.nombre); // Verificamos cada nombre de servicio
            const option = new Option( servicio.nombre,servicio.iD_servicio); // Creamos la opción con texto y valor
            select.appendChild(option);  // Añadimos la opción al select
        });
    })
    .catch(error => {
        console.error('Error al cargar los servicios: ', error);
    });

</script>

<script>
    // Usamos Fetch API para obtener los servicios de la API
    fetch('/Estado/listareEstados')
    .then(response => response.json()) // Convertimos la respuesta a JSON
    .then(data => {

        // Accedemos al select usando el atributo name
        const select = document.getElementsByName('estado')[0]; // Obtenemos el primer elemento con el name 'servicio'

        // Limpiamos las opciones anteriores (si es necesario)
        select.innerHTML = '';

        // Añadimos la opción por defecto
        const optionDefault = new Option('Seleccione un estado', '');
        select.appendChild(optionDefault); // Añadimos la opción por defecto

        // Iteramos sobre los servicios obtenidos de la API y añadimos opciones
        data.forEach(estado => {
            console.log(estado.nombre); // Verificamos cada nombre de servicio
            const option = new Option(estado.nombre,estado.iD_estado ); // Creamos la opción con texto y valor
            select.appendChild(option);  // Añadimos la opción al select
        });
    })
    .catch(error => {
        console.error('Error al cargar los estados: ', error);
    });

</script>